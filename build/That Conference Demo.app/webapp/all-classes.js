/*
Copyright(c) 2012 Company Name
*/
/*
 * File: app/view/MyNavigationView.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ThatConference.view.MyNavigationView', {
    extend: 'Ext.navigation.View',

    config: {
        items: [
            {
                xtype: 'container',
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'image',
                        centered: true,
                        height: 223,
                        itemId: 'logo',
                        width: 300,
                        src: 'img/logo.png'
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/model/Person.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ThatConference.model.Person', {
    extend: 'Ext.data.Model',
    config: {
        fields: [
            {
                mapping: 'attendee.id',
                name: 'id',
                type: 'int'
            },
            {
                name: 'name',
                type: 'string'
            }
        ]
    }
});
/*
 * File: app/view/AttendeeList.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ThatConference.view.AttendeeList', {
    extend: 'Ext.Container',

    config: {
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'list',
                itemId: 'AttendeeList',
                itemTpl: [
                    '<div>{name}</div>'
                ],
                store: 'Attendees'
            },
            {
                xtype: 'toolbar',
                docked: 'top',
                layout: {
                    pack: 'end',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'pickWinner',
                        ui: 'confirm',
                        text: 'Pick Winner'
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/controller/App.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ThatConference.controller.App', {
    extend: 'Ext.app.Controller',
    config: {
        control: {
            "img#logo": {
                tap: 'showList'
            },
            "button#pickWinner": {
                tap: 'pickWinner'
            }
        }
    },

    showList: function(img, e, options) {
        var navView = img.up('navigationview');
        var list = Ext.create('ThatConference.view.AttendeeList');

        navView.push(list);
        list.down('list').getStore().load();
    },

    pickWinner: function(button, e, options) {
        var store = Ext.data.StoreManager.lookup('Attendees');

        var index = Math.floor(Math.random() * store.getCount());
        var winner = store.getAt(index);

        Ext.Msg.alert('The winner...', winner.get('name'));
    }

});
/*
 * File: app/store/Attendees.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ThatConference.store.Attendees', {
    extend: 'Ext.data.Store',
    requires: [
        'ThatConference.model.Person'
    ],

    config: {
        model: 'ThatConference.model.Person',
        storeId: 'Attendees',
        proxy: {
            type: 'ajax',
            url: 'people.json',
            reader: {
                type: 'json',
                rootProperty: 'people'
            }
        }
    }
});


